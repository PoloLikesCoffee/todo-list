/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/DOM.js":
/*!********************!*\
  !*** ./src/DOM.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form */ \"./src/form.js\");\n/* harmony import */ var _taskFeature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./taskFeature */ \"./src/taskFeature.js\");\n/* harmony import */ var _projectFeature__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projectFeature */ \"./src/projectFeature.js\");\n\n\n\n\n//this module takes care of the creation of the element of the html\nconst initializeDOM = (function () {\n    \n    //header\n    const createHeader = () => {\n        const header = document.createElement('div');\n        header.innerHTML = `Todo<br> List`;\n        header.classList.add('header');\n\n        return header;\n    }\n    \n    //sidebar\n    const createSideBar = () => {\n        const sideBar = document.createElement('div');\n        sideBar.id = 'sidebar';\n\n        const sideBarContent = ['Home', 'Projects'];\n        sideBarContent.forEach(item => {\n        let sideBarItem = document.createElement('div');\n        sideBarItem.classList.add('sidebar-item');\n        sideBarItem.setAttribute('data-tab', item);\n        sideBarItem.innerText = item;\n        if (item == 'Home') {\n            const counter = document.createElement('p');\n            counter.classList.add('counter');\n            counter.innerText = '0';\n            sideBarItem.appendChild(counter);\n        }\n        // if (item == sideBarContent[0]) {\n        //     sideBarItem.classList.add('active');\n        // }\n        sideBar.appendChild(sideBarItem);\n    });\n\n        return sideBar;\n    }\n    const clickOnNavItems = () => {\n        const navItems = document.querySelectorAll('.sidebar-item');\n        navItems.forEach(item => {\n            item.addEventListener('click', handlePage);\n        });\n    }\n    const handlePage = (event) => {\n        // if (event.target.classList.contains('active')) {\n        //     return;\n        // }\n        const main = document.querySelector('.list-content');\n        const project = document.querySelector('.project-content');\n        const subBar = document.getElementById('sub-bar');\n        switch(event.target.dataset.tab) {\n            case 'Home':\n                main.style.display ='flex';\n                project.style.display ='none';\n                subBar.style.display = 'none';\n                console.log('home');\n                break;\n            case 'Projects':\n                main.style.display ='none';\n                project.style.display ='flex';\n                subBar.style.display = 'flex';\n                console.log('projects');\n                clickOnSub();\n                break;\n        }\n        // let activeNavItem = document.querySelector('.active');\n        // activeNavItem.classList.remove('active');\n        // event.target.classList.add('active');\n    }\n\n    //sub bar \n    const createSubBar = () => {\n        const subBar = document.createElement('div');\n        subBar.id = 'sub-bar';\n\n        return subBar;\n    }\n    const clickOnSub = () => {\n        const subItems = document.querySelectorAll('.sub-bar-item');\n        subItems.forEach(item => {\n            //console.log(item);\n            item.addEventListener('click', handleSubPage);\n        });\n    }\n    const handleSubPage = (event) => {\n        \n        // if (event.target.classList.contains('active')) {\n        //     return;\n        // }\n       \n        const projectContent = document.querySelector('.project-content');\n        const currentProjectH2 = document.querySelector(`[data-h2 = '${event.currentTarget.dataset.sub}']`);\n        const currentProjectContent = document.querySelector(`[data-content = '${event.currentTarget.dataset.sub}']`);\n        //console.log(currentProject);\n        //console.log(projectContent);\n\n        projectContent.prepend(currentProjectH2, currentProjectContent);\n\n        // let activeSubItem = document.querySelector('.active');\n        // activeSubItem.classList.remove('active');\n    \n        // event.target.classList.add('active');\n    }\n\n    //todo list main content and project main content\n    const createListContent = () => {\n        const listContent = document.createElement('div');\n        listContent.classList.add('list-content');\n        \n        //todo list sub categories\n        const pastH2 = document.createElement('h2');\n        pastH2.innerHTML = `Past <p class=\"number-past\"></p>`;\n        listContent.appendChild(pastH2);\n\n        const pastContent = document.createElement('div');\n        pastContent.classList.add('past-content');\n        listContent.appendChild(pastContent);\n\n        const todayH2 = document.createElement('h2');\n        todayH2.innerHTML = `Today <p class=\"number-today\"></p>`;\n        listContent.appendChild(todayH2);\n        \n        const todayContent = document.createElement('div');\n        todayContent.classList.add('today-content');\n        listContent.appendChild(todayContent);\n\n        const tomorrowH2 = document.createElement('h2');\n        tomorrowH2.innerHTML = `Tomorrow <p class=\"number-tomorrow\"></p>`;\n        listContent.appendChild(tomorrowH2);\n\n        const tomorrowContent = document.createElement('div');\n        tomorrowContent.classList.add('tomorrow-content');\n        listContent.appendChild(tomorrowContent);\n        \n        const upcomingH2 = document.createElement('h2');\n        upcomingH2.innerHTML = `Upcoming <p class=\"number-upcoming\"></p>`;\n        listContent.appendChild(upcomingH2);\n\n        const upcomingContent = document.createElement('div');\n        upcomingContent.classList.add('upcoming-content');\n        listContent.appendChild(upcomingContent);\n\n        return listContent;\n    }\n    const createProjectContent = () => {\n        const projectContent = document.createElement('div');\n        projectContent.classList.add('project-content');\n        return projectContent;\n    }\n    \n    //add button for task and for project\n    const createAddButton = () => {\n        const addBtn = document.createElement('button');\n        addBtn.setAttribute('title', \"Add\");\n        addBtn.innerHTML = `<i class=\"fa fa-plus\"></i>`;\n        addBtn.classList.add('add-button');\n        addBtn.addEventListener('click', _form__WEBPACK_IMPORTED_MODULE_0__.default.openForm);\n        return addBtn;\n    }\n    const newProjectButton = () => {\n        const add = document.createElement('div');\n        add.classList.add('new-project');\n        add.innerHTML = `<i class=\"fa fa-plus\"></i> add new project`;\n        add.addEventListener('click', _form__WEBPACK_IMPORTED_MODULE_0__.default.openProjectForm);\n        return add;\n    }\n\n    //form for task and for project\n    const createForm = () => {\n        const form = document.createElement('div');\n        form.id = 'form';\n        form.innerHTML = `\n            <form id=\"form-task\" class=\"hidden\" action=\"#\">\n                <div class=\"tools-form\">\n                    <button type=\"submit\" class=\"validate\"><i class=\"fa fa-check\"></i></button>\n                </div>\n                <div class=\"main-form\">\n                    <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"The title of the task..\" autocomplete=\"off\" required>\n                    \n                    <!--<label for=\"description\"></label>\n                    <textarea id=\"description\" name=\"description\" rows=\"3\" placeholder=\"The dexcription of the task\" autocomplete=\"off\"></textarea>-->\n\n                    <input type=\"date\" id=\"dueDate\" name=\"dueDate\" required>\n\n                    <select id=\"priority\" name=\"priority\" required>\n                        <option value=\"\" selected disabled hidden>Priority?</option>\n                        <option value=\"low\">Low</option>\n                        <option value=\"medium\">Medium</option>\n                        <option value=\"high\">High</option>\n                    </select>\n                </div>\n            </form>`;\n\n            form.addEventListener('submit', _taskFeature__WEBPACK_IMPORTED_MODULE_1__.default.submitNewTask);\n\n        return form;\n    }\n    const createProjectForm = () => {\n        const formProject = document.createElement('div');\n        formProject.id = 'project-form';\n        formProject.innerHTML = `\n            <form id=\"project\" class=\"hidden\" action=\"#\">\n                <div class=\"tools-project-form\">\n                    <button type=\"submit\" class=\"validate\"><i class=\"fa fa-check\"></i></button>\n                </div>\n                <div class=\"main-form-project\">\n                    <input type=\"text\" id=\"project-title\" name=\"project-title\" placeholder=\"The project's name..\" autocomplete=\"off\" required>\n                </div>\n            </form>`;\n\n            formProject.addEventListener('submit', _projectFeature__WEBPACK_IMPORTED_MODULE_2__.default.submitNewProject);\n\n        return formProject;\n    }\n\n    //Todo list update\n    const updateList = () => {\n        const pastContent = document.querySelector('.past-content');\n        pastContent.innerHTML = '';\n        const todayContent = document.querySelector('.today-content');\n        todayContent.innerHTML = '';\n        const tomorrowContent = document.querySelector('.tomorrow-content');\n        tomorrowContent.innerHTML = '';\n        const upcomingContent = document.querySelector('.upcoming-content');\n        upcomingContent.innerHTML = '';\n    }\n    //create task\n    const createDOMTask = () => {\n        const taskCard = `\n        <div class=\"main\">\n            <input type=\"checkbox\" class=\"input-complete\" name=\"complete\">\n\n            <div class=\"main-title\"></div>\n            \n            <div class=\"main-dueDate\"></div>\n\n            <div class=\"main-priority\"></div>\n            \n        </div>\n        <div class=\"tools\">\n            <button class=\"edit-button-card\"><i class=\"fa fa-edit\"></i></button>\n            <button class=\"dlt-button-card\"><i class=\"fa fa-trash\"></i></button>\n        </div>\n        <div class=\"edit-task hidden\">\n            <input type=\"text\" class=\"task-title hidden\" name=\"title\" autocomplete=\"off\">\n            <input type=\"date\" class=\"task-dueDate hidden\" name=\"dueDate\">\n            <select class=\"task-priority hidden\" name=\"priority\">\n                <option value=\"low\">Low</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"high\">High</option>\n            </select>\n            <button class=\"validate-edit\"><i class=\"fa fa-check\"></i></button>\n            <button class=\"close-edit\"><i class=\"fa fa-times\"></i></button>\n        </div>\n        `;\n        return taskCard;\n    }\n    //set priority color to task\n    const setPriorityColor = (item, tools) => {\n        if (tools.classList.contains('low') || tools.classList.contains('medium') || tools.classList.contains('high')) {\n            tools.classList.remove('low', 'medium', 'high');\n            if (item.priority =='low') {\n                tools.classList.add('low');\n            } else if (item.priority =='medium') {\n                tools.classList.add('medium');\n            } else if (item.priority =='high') {\n                tools.classList.add('high');\n            }\n        } else {\n            if (item.priority =='low') {\n                tools.classList.add('low');\n            } else if (item.priority =='medium') {\n                tools.classList.add('medium');\n            } else if (item.priority =='high') {\n                tools.classList.add('high');\n            }\n        }\n    }\n    //update completed tasks display\n    const completedDisplay = (event) => {\n        let currentTask = event.currentTarget.parentNode.parentNode;\n        currentTask.classList.toggle('completed');\n        const tools = currentTask.querySelector('.tools');\n        tools.classList.toggle('completed');\n        const deleteButton = currentTask.querySelector('.dlt-button-card');\n        deleteButton.classList.toggle('completed');\n        const editButton = currentTask.querySelector('.edit-button-card');\n        editButton.classList.toggle('completed');\n    }\n    //append elements\n    const createLayout = () => {\n        const content = document.getElementById('content');\n        // const headerEl = createHeader();\n        // const sideBarEl = createSideBar();\n        // const subBarEl = createSubBar();\n        // const listContentEl = createListContent();\n        // const projectContentEl = createProjectContent();\n        // const btnEl = createAddButton();\n        // const formEl = createForm();\n        // const projectFormEl = createProjectForm();\n        // const newProjectBtnEl = newProjectButton();\n        content.append(createHeader(), createSideBar(), createSubBar(), createListContent(), createProjectContent());\n        content.append(createAddButton(), createForm(), createProjectForm(), newProjectButton());\n        clickOnNavItems();\n    }\n\n    return {\n        createLayout, \n        updateList,\n        createDOMTask,\n        setPriorityColor,\n        completedDisplay\n    };\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initializeDOM);\n\n//# sourceURL=webpack://todo-list/./src/DOM.js?");

/***/ }),

/***/ "./src/dateStuff.js":
/*!**************************!*\
  !*** ./src/dateStuff.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n//this module takes care of diverse functions\nconst dateStuff = (function () {\n    function isEven(value) {\n        if (value%2 == 0) {\n            return true;\n        }   \n        else {\n            return false\n        }\n    }\n\n    const getTodayDate = () => {\n        let today = new Date();\n        let dd = String(today.getDate()).padStart(2, '0');\n        let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let yyyy = today.getFullYear();\n        today = yyyy + '-' + mm + '-' + dd;\n        return today;\n    }\n    const getTomorrowDate = () => {\n        let today = new Date();\n        let tomorrow = new Date(today);\n        let dd = String(today.getDate()).padStart(2, '0');\n        let mmToday = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        mmToday = parseInt(mmToday);\n        if( (dd >= 31 && !isEven(mmToday)) || (dd >= 30 && isEven(mmToday))) {\n            let mm = String(tomorrow.getMonth()+2).padStart(2, '0'); //January is 0!\n            let yyyy = tomorrow.getFullYear();\n            tomorrow = yyyy + '-' + mm + '-' + '01';\n            return tomorrow;\n        } else {\n            let dd = String(today.getDate() +1).padStart(2, '0');\n            let mm = String(today.getMonth() + 2).padStart(2, '0'); //January is 0!\n            let yyyy = today.getFullYear();\n        tomorrow = yyyy + '-' + mm + '-' + dd;\n        return tomorrow;\n        }\n        \n    }\n    return {\n        getTodayDate,\n        getTomorrowDate\n    }\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dateStuff);\n\n//# sourceURL=webpack://todo-list/./src/dateStuff.js?");

/***/ }),

/***/ "./src/form.js":
/*!*********************!*\
  !*** ./src/form.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n//this module takes care of the form\nconst initializeForm = (function () {\n    const openForm = () => {\n        const form = document.getElementById('form-task');\n        const btn = document.querySelector('.add-button');\n        form.classList.toggle(\"hidden\");\n        if (btn.innerHTML == `<i class=\"fa fa-plus\"></i>`) {\n            btn.innerHTML = `<i class=\"fa fa-times\"></i>`;\n        } else {\n            btn.innerHTML = `<i class=\"fa fa-plus\"></i>`;\n        }\n    }\n\n    const clearForm = (event) => {\n        event.target.elements['title'].value = null;\n        event.target.elements['dueDate'].value = null;\n        event.target.elements['priority'].value = '';\n    }\n\n    const openProjectForm = () => {\n        const form = document.getElementById('project');\n        const btn = document.querySelector('.new-project');\n        form.classList.toggle(\"hidden\");\n        if (btn.innerHTML == `<i class=\"fa fa-plus\"></i> add new project`) {\n            btn.innerHTML = `<i class=\"fa fa-times\"></i> close form`;\n        } else {\n            btn.innerHTML = `<i class=\"fa fa-plus\"></i> add new project`;\n        }\n    }\n\n    const clearProjectForm = (event) => {\n        event.target.elements['project-title'].value = null;\n    }\n\n    return {\n        openForm,\n        clearForm,\n        openProjectForm,\n        clearProjectForm\n    };\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initializeForm);\n\n//# sourceURL=webpack://todo-list/./src/form.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _taskFeature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./taskFeature */ \"./src/taskFeature.js\");\n/* harmony import */ var _projectFeature__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projectFeature */ \"./src/projectFeature.js\");\n\n\n\n\n_DOM__WEBPACK_IMPORTED_MODULE_0__.default.createLayout();\n\n//taskFeature.loadHome();\n_taskFeature__WEBPACK_IMPORTED_MODULE_1__.default.loadStorage();\n_taskFeature__WEBPACK_IMPORTED_MODULE_1__.default.updateTodoListDisplay();\n_projectFeature__WEBPACK_IMPORTED_MODULE_2__.default.loadStorage();\n_projectFeature__WEBPACK_IMPORTED_MODULE_2__.default.updateProjectListDisplay();\n_taskFeature__WEBPACK_IMPORTED_MODULE_1__.default.updateCounter();\n_taskFeature__WEBPACK_IMPORTED_MODULE_1__.default.updateNumber(document.querySelector('.past-content'));\n_taskFeature__WEBPACK_IMPORTED_MODULE_1__.default.updateNumber(document.querySelector('.today-content'));\n_taskFeature__WEBPACK_IMPORTED_MODULE_1__.default.updateNumber(document.querySelector('.tomorrow-content'));\n_taskFeature__WEBPACK_IMPORTED_MODULE_1__.default.updateNumber(document.querySelector('.upcoming-content'));\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ }),

/***/ "./src/project.js":
/*!************************!*\
  !*** ./src/project.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass Project {\n    constructor(projectData) {\n        this._title = projectData.title;\n    }\n\n    get title() {\n        return this._title;\n    }\n    set title(value) {\n        this._title = value.toString();\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Project);\n\n//# sourceURL=webpack://todo-list/./src/project.js?");

/***/ }),

/***/ "./src/projectFeature.js":
/*!*******************************!*\
  !*** ./src/projectFeature.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _project__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./project */ \"./src/project.js\");\n/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form */ \"./src/form.js\");\n\n\n\nconst projectFeature = (function () {\n\n    let subBarContent = [];\n\n    const addProjectToList = (project) => {\n        subBarContent.push(project);\n        localStorage.setItem('localProjectList', JSON.stringify(subBarContent));\n        updateProjectListDisplay();\n    }\n\n    const updateProjectListDisplay = () => {\n        const sub = document.getElementById('sub-bar');\n        const projectContent = document.querySelector('.project-content');\n        projectContent.innerHTML= '';\n        sub.innerHTML= '';\n        let index = 0;\n\n        subBarContent.forEach(item => {\n            let subItem = document.createElement('div');\n            subItem.classList.add('sub-bar-item');\n            subItem.setAttribute('data-sub', index);\n            item.index = index;\n\n            subItem.innerHTML = `\n            <div class=\"name-project\">\n                ${index+1}. ${item.title}\n            </div> \n            <div class=\"tools-project\">\n                <button class=\"dlt-button-project hidden\">\n                <i class=\"fa fa-trash\"></i></button>\n            </div>`;\n\n            const currentProjectH2 = document.createElement('h2');\n            currentProjectH2.innerText = index+1 + '. ' +item.title;\n            currentProjectH2.setAttribute('data-h2', index);\n            projectContent.appendChild(currentProjectH2);\n\n            const currentProjectContent = document.createElement('div');\n            currentProjectContent.classList.add('current-project-content');\n            currentProjectContent.setAttribute('data-content', index);\n            projectContent.appendChild(currentProjectContent);\n            \n            const deleteButton = subItem.querySelector('.dlt-button-project');\n            deleteButton.addEventListener('click', deleteProject);\n\n            sub.appendChild(subItem);\n            index++;\n        });\n    }\n\n    const submitNewProject = (event) => {\n        event.preventDefault();\n        let project = Object.create(_project__WEBPACK_IMPORTED_MODULE_0__.default.prototype);\n\n        project.title = event.target.elements['project-title'].value;\n        \n        addProjectToList(project);\n        _form__WEBPACK_IMPORTED_MODULE_1__.default.clearProjectForm(event);\n        _form__WEBPACK_IMPORTED_MODULE_1__.default.openProjectForm();\n        console.log(subBarContent);\n    }\n\n    const deleteProject = (event) => {\n        let projectIndex = event.currentTarget.parentNode.dataset.index;\n        //console.log(event.currentTarget.parentNode.parentNode.dataset.sub);\n        subBarContent.splice(projectIndex, 1);\n        console.log(subBarContent);\n        localStorage.setItem('localProjectList', JSON.stringify(subBarContent));\n        updateProjectListDisplay();\n    }\n\n    //localStorage feature\n    function loadStorage() {\n        // check if the local library is empty\n        if(!localStorage.getItem('localProjectList')) {\n            localStorage.setItem('localProjectList', JSON.stringify(subBarContent));\n        } else {\n            subBarContent = JSON.parse(localStorage.getItem('localProjectList'));\n            //console.log(subBarContent);\n            let tempArray = [];\n            subBarContent.forEach(objectToConvert => {\n                let convertedObjectToProject = Object.create(_project__WEBPACK_IMPORTED_MODULE_0__.default.prototype);\n                for(const element in objectToConvert) {\n                    convertedObjectToProject[element] = objectToConvert[element];\n                }\n                //console.log(convertedObjectToProject);\n\n                tempArray.push(convertedObjectToProject);\n                return tempArray;\n            });\n            subBarContent = tempArray;\n        }\n    }\n\n    return {\n        submitNewProject,\n        updateProjectListDisplay,\n        loadStorage\n    }\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (projectFeature);\n\n//# sourceURL=webpack://todo-list/./src/projectFeature.js?");

/***/ }),

/***/ "./src/task.js":
/*!*********************!*\
  !*** ./src/task.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dateStuff__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dateStuff */ \"./src/dateStuff.js\");\n\n\n//this takes care of creating and deleting task\nclass Task {\n    constructor(taskData) {\n        this._title = taskData.title;\n        this._dueDate = taskData.dueDate;\n        this._priority = taskData.priority;\n        this._completed = taskData.completed;\n    }\n\n    get title() {\n        return this._title;\n    }\n    get dueDate() {\n        return this._dueDate;\n    }\n    get priority() {\n        return this._priority;\n    }\n    get completed() {\n        return this._completed;\n    }\n\n    set title(value) {\n        this._title = value.toString();\n    }  \n\n    set dueDate(value) {\n        if (value < _dateStuff__WEBPACK_IMPORTED_MODULE_0__.default.getTodayDate()) {\n            alert('Since the date is already passed, default value of today = ' + _dateStuff__WEBPACK_IMPORTED_MODULE_0__.default.getTodayDate() + '!');\n            value = _dateStuff__WEBPACK_IMPORTED_MODULE_0__.default.getTodayDate();\n            this._dueDate = value;\n        } else {\n            this._dueDate = value;\n        }\n    }\n\n    set priority(value) {\n        this._priority = value.toString();\n    }\n    \n    set completed(value) {\n        (value) ? this._completed = true : this._completed = false;\n    }\n\n    toggleCompleted() {\n        this._completed = !this._completed; \n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Task);\n\n//# sourceURL=webpack://todo-list/./src/task.js?");

/***/ }),

/***/ "./src/taskFeature.js":
/*!****************************!*\
  !*** ./src/taskFeature.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _task__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./task */ \"./src/task.js\");\n/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form */ \"./src/form.js\");\n/* harmony import */ var _dateStuff__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dateStuff */ \"./src/dateStuff.js\");\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n\n\n\n\n\n//this module takes care of the list of tasks, display the list, ...\nconst taskFeature = (function () {\n    \n    let todoList = [];\n\n    const addTaskToList = (task) => {\n        todoList.push(task);\n        localStorage.setItem('localList', JSON.stringify(todoList));\n        updateTodoListDisplay();\n    }\n\n    const updateTodoListDisplay = () => {\n        _DOM__WEBPACK_IMPORTED_MODULE_3__.default.updateList();\n        let index = 0;\n\n        todoList.forEach(item => {\n            let task = document.createElement('div');\n            task.classList.add('task');\n            task.setAttribute('data-index', index);\n            item.index = index;\n    \n            task.innerHTML = _DOM__WEBPACK_IMPORTED_MODULE_3__.default.createDOMTask();\n            \n            const main = task.querySelector('.main');\n            let mainTitle = main.querySelector('.main-title');\n            let mainDueDate = main.querySelector('.main-dueDate');\n            let mainPriority = main.querySelector('.main-priority');\n    \n            mainTitle.innerText = item.title;\n            mainDueDate.innerText = item.dueDate;\n            mainPriority.innerText = item.priority;\n\n            const inputComplete = task.querySelector('.input-complete');\n            inputComplete.setAttribute(\"id\", (\"complete\" + index));\n            inputComplete.addEventListener(\"change\", checkCompleted);\n            if (item.completed) {\n                inputComplete.setAttribute(\"checked\", \"checked\");\n                task.classList.toggle('completed');\n                const tools = task.querySelector('.tools');\n                tools.classList.toggle('completed');\n                const deleteButton = task.querySelector('.dlt-button-card');\n                deleteButton.classList.toggle('completed');\n                const editButton = task.querySelector('.edit-button-card');\n                editButton.classList.toggle('completed');\n            }\n\n            const tools = task.querySelector('.tools');\n            _DOM__WEBPACK_IMPORTED_MODULE_3__.default.setPriorityColor(item, tools);\n\n            const editButton = task.querySelector('.edit-button-card');\n            editButton.addEventListener('click', openEditMenu);\n            const validateButton = task.querySelector('.validate-edit');\n            validateButton.addEventListener('click', editTask);\n            const closeButton = task.querySelector('.close-edit');\n            closeButton.addEventListener('click', closeEditMenu);\n            const deleteButton = task.querySelector('.dlt-button-card');\n            deleteButton.addEventListener('click', deleteTask);\n\n            appendList(item.dueDate, task);\n            index++;\n        });\n    }\n\n    const submitNewTask = (event) => {\n        event.preventDefault();\n        let task = Object.create(_task__WEBPACK_IMPORTED_MODULE_0__.default.prototype);\n\n        task.title = event.target.elements['title'].value;\n        task.dueDate = event.target.elements['dueDate'].value;\n        task.priority = event.target.elements['priority'].value;\n        task.completed = false;\n        \n        addTaskToList(task);\n        _form__WEBPACK_IMPORTED_MODULE_1__.default.clearForm(event);\n        _form__WEBPACK_IMPORTED_MODULE_1__.default.openForm();\n        console.log(todoList);\n    }\n\n    const checkCompleted = (event) => {\n        let taskIndex = event.currentTarget.parentNode.parentNode.dataset.index;\n        todoList[taskIndex].toggleCompleted();\n        console.log(todoList);\n        _DOM__WEBPACK_IMPORTED_MODULE_3__.default.completedDisplay(event);\n        localStorage.setItem('localList', JSON.stringify(todoList));\n    }\n\n    const openEditMenu = (event) => {\n        //disable edit button\n        event.currentTarget.disabled = true;\n        \n        let currentTask = event.currentTarget.parentNode.parentNode;\n        const edit = currentTask.querySelector('.edit-task');\n        \n        //disable delete button\n        const deleteButton = currentTask.querySelector('.dlt-button-card');\n        deleteButton.disabled = true;\n\n        //display edit menu\n        currentTask.classList.toggle(\"edit\");\n        edit.classList.toggle(\"hidden\");\n\n        //get the values of the current task\n        const tt = edit.querySelector('.task-title');\n        const td = edit.querySelector('.task-dueDate');\n        const tp = edit.querySelector('.task-priority');\n        tt.value = currentTask.querySelector('.main-title').innerText;\n        td.value = currentTask.querySelector('.main-dueDate').innerText;\n        tp.value = currentTask.querySelector('.main-priority').innerText;\n    }\n\n    const editTask = (event) => {\n        let currentTask = event.currentTarget.parentNode.parentNode;\n        const edit = currentTask.querySelector('.edit-task');\n        \n        //update values of current task\n        const tt = edit.querySelector('.task-title').value;\n        const td = edit.querySelector('.task-dueDate').value;\n        const tp = edit.querySelector('.task-priority').value;\n\n        //change\n        currentTask.querySelector('.main-title').innerText = tt;\n        if (td < _dateStuff__WEBPACK_IMPORTED_MODULE_2__.default.getTodayDate()) {\n            currentTask.querySelector('.main-dueDate').innerText = _dateStuff__WEBPACK_IMPORTED_MODULE_2__.default.getTodayDate();\n            appendList(td, currentTask);\n        } else {\n            currentTask.querySelector('.main-dueDate').innerText = td;\n            appendList(td, currentTask);\n        }\n        currentTask.querySelector('.main-priority').innerText = tp;\n\n        let currentTaskIndex = event.currentTarget.parentNode.parentNode.dataset.index;\n        todoList[currentTaskIndex].title = tt;\n        todoList[currentTaskIndex].dueDate = td;\n        todoList[currentTaskIndex].priority = tp;\n\n        const tools = currentTask.querySelector('.tools');\n        _DOM__WEBPACK_IMPORTED_MODULE_3__.default.setPriorityColor(todoList[currentTaskIndex], tools);\n        console.log(todoList);\n        currentTask.classList.toggle(\"edit\");\n        edit.classList.toggle(\"hidden\");\n\n        //enable edit and delete button\n        const editButton = currentTask.querySelector('.edit-button-card');\n        editButton.disabled = false;\n        const deleteButton = currentTask.querySelector('.dlt-button-card');\n        deleteButton.disabled = false;\n        localStorage.setItem('localList', JSON.stringify(todoList));\n    }\n\n    const closeEditMenu = (event) => {\n        let currentTask = event.currentTarget.parentNode.parentNode;\n        const edit = currentTask.querySelector('.edit-task');\n        currentTask.classList.toggle(\"edit\");\n        edit.classList.toggle(\"hidden\");\n\n        //enable edit and delete button\n        const editButton = currentTask.querySelector('.edit-button-card');\n        editButton.disabled = false;\n        const deleteButton = currentTask.querySelector('.dlt-button-card');\n        deleteButton.disabled = false;\n    }\n\n    const deleteTask = (event) => {\n        let taskIndex = event.currentTarget.parentNode.parentNode.dataset.index;\n        todoList.splice(taskIndex, 1);\n        console.log(todoList);\n        localStorage.setItem('localList', JSON.stringify(todoList));\n        updateTodoListDisplay();\n    }\n\n    const appendList = (date, element) => {\n        if (date < _dateStuff__WEBPACK_IMPORTED_MODULE_2__.default.getTodayDate()) {\n            const pastContent = document.querySelector('.past-content');\n            pastContent.append(element);\n        } else if (date === _dateStuff__WEBPACK_IMPORTED_MODULE_2__.default.getTodayDate()) {\n            const todayContent = document.querySelector('.today-content');\n            todayContent.append(element);\n        } else if (date === _dateStuff__WEBPACK_IMPORTED_MODULE_2__.default.getTomorrowDate()) {\n            const tomorrowContent = document.querySelector('.tomorrow-content');\n            tomorrowContent.append(element);\n        } else if (date > _dateStuff__WEBPACK_IMPORTED_MODULE_2__.default.getTomorrowDate()) {\n            const upcomingContent = document.querySelector('.upcoming-content');\n            upcomingContent.append(element);\n        }\n    }\n\n    const updateNumber = (parent) => {\n        // const pastContent = document.querySelector('.past-content');\n        // const todayContent = document.querySelector('.today-content');\n        // const tomorrowContent = document.querySelector('.tomorrow-content');\n        // const upcomingContent = document.querySelector('.upcoming-content');\n        const nbPast = document.querySelector('.number-past');\n        const nbToday = document.querySelector('.number-today');\n        const nbTomorrow = document.querySelector('.number-tomorrow');\n        const nbUpcoming = document.querySelector('.number-upcoming');\n\n        let relevantChildren = 0;\n        let children = parent.childNodes.length;\n\n        for(let i=0; i < children; i++){\n            if(parent.childNodes[i].nodeType != 3){\n                relevantChildren++;\n            }\n        }\n        \n        if (parent == document.querySelector('.past-content')) {\n            return nbPast.textContent = relevantChildren;\n        } else if (parent == document.querySelector('.today-content')) {\n            return nbToday.textContent = relevantChildren;\n        } else if (parent == document.querySelector('.tomorrow-content')) {\n            return nbTomorrow.textContent = relevantChildren;\n        } else if (parent == document.querySelector('.upcoming-content')) {\n            return nbUpcoming.textContent = relevantChildren;\n        } \n    }\n\n    const updateCounter = () => {\n        let homeCountNumber = 0;\n        for(let i =0; i < todoList.length; i++) {\n            let item = todoList[i];\n            console.log(item);\n            if(item.completed == false) {\n                homeCountNumber++;\n            }\n        }\n        const counter = document.querySelector('.counter');\n        counter.textContent = homeCountNumber;\n        // re-set count display\n        counter.style.display = 'inline-flex';\n        if (counter.textContent < 1) {\n            // hide count display if 0\n            counter.style.display = 'none';\n        }\n    }\n\n    //localStorage feature\n    function loadStorage() {\n        // check if the local library is empty\n        if(!localStorage.getItem('localList')) {\n            localStorage.setItem('localList', JSON.stringify(todoList));\n        } else {\n            todoList = JSON.parse(localStorage.getItem('localList'));\n            console.log(todoList);\n            let tempArray = [];\n            todoList.forEach(objectToConvert => {\n                let convertedObjectToTask = Object.create(_task__WEBPACK_IMPORTED_MODULE_0__.default.prototype);\n                for(const element in objectToConvert) {\n                    convertedObjectToTask[element] = objectToConvert[element];\n                }\n                console.log(convertedObjectToTask);\n\n                tempArray.push(convertedObjectToTask);\n                return tempArray;\n            });\n            todoList = tempArray;\n        }\n    }\n\n    return {\n        loadStorage,\n        updateTodoListDisplay,\n        submitNewTask,\n        updateNumber,\n        updateCounter\n    }\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (taskFeature);\n\n//# sourceURL=webpack://todo-list/./src/taskFeature.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;